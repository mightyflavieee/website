---
import { Icon } from "astro-icon";
import {
  ButtonProps,
  ButtonPropsColor,
  ButtonTextSize,
  IconSide,
} from "../models/ButtonProps.model";

const {
  text,
  href,
  color,
  icon,
  textSize,
  isFilled = true,
  isGradient = false,
  classes,
  ariaLabel,
} = Astro.props as ButtonProps;
---

<a
  href={href}
  class:list={[
    "rounded-lg font-medium px-4 py-3",
    classes,
    isGradient
      ? "bg-gradient-to-r from-indigo-500 to-myLightBlue hover:from-indigo-900 hover:to-indigo-900 hover:text-white"
      : "",
    color === ButtonPropsColor.PRIMARY && isFilled && !isGradient
      ? "bg-white text-indigo-500 hover:bg-indigo-500 hover:text-white"
      : "",
    color === ButtonPropsColor.SECONDARY && isFilled && !isGradient
      ? "bg-indigo-500 hover:bg-white hover:text-indigo-500"
      : "",
    color === ButtonPropsColor.PRIMARY && !isFilled && !isGradient
      ? "border border-white hover:bg-white hover:text-indigo-500"
      : "",
    color === ButtonPropsColor.SECONDARY && !isFilled && !isGradient
      ? "border border-indigo-500 text-indigo-500 hover:bg-indigo-500 hover:text-white"
      : "",
  ]}
  aria-label={ariaLabel}
>
  <div class="flex flex-row items-center justify-center">
    {
      icon && icon.side === "left" && (
        <Icon name={icon.name} height="24" width="24" />
      )
    }
    <span
      class:list={[
        text === "" ? "hidden" : "",
        icon !== undefined && icon !== null && icon.side === IconSide.LEFT
          ? "ml-2"
          : "mr-2",
        textSize === ButtonTextSize.BIG ? "text-2xl" : "",
        textSize === ButtonTextSize.MEDIUM ? "text-md" : "",
        textSize === ButtonTextSize.SMALL ? "text-xs" : "",
      ]}
    >
      {text}
    </span>
    {
      icon && icon.side === "right" && (
        <Icon name={icon.name} height="24" width="24" />
      )
    }
  </div>
</a>
